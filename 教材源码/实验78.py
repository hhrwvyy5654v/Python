import copy
import numpy as np
from sklearn import linear_model

# 测试数据，每个子列表的元素分别表示儿童年龄,性别（0女1男）,
# 父亲身高,母亲身高,祖父身高,祖母身高,外祖父身高,外祖母身高
x = np.array([[1, 0, 180, 165, 175, 165, 170, 165],
               [3, 0, 180, 165, 175, 165, 173, 165],
               [4, 0, 180, 165, 175, 165, 170, 165],
               [6, 0, 180, 165, 175, 165, 170, 165],
               [8, 1, 180, 165, 175, 167, 170, 165],
               [10, 0, 180, 166, 175, 165, 170, 165],
               [11, 0, 180, 165, 175, 165, 170, 165],
               [12, 0, 180, 165, 175, 165, 170, 165],
               [13, 1, 180, 165, 175, 165, 170, 165],
               [14, 0, 180, 165, 175, 165, 170, 165],
               [17, 0, 170, 165, 175, 165, 170, 165]])
# 儿童身高，单位：cm
y = np.array([60, 90, 100, 110,
               130, 140, 150, 164,
               160, 163, 168])

# 创建线性回归模型，根据已知数据拟合最佳直线
lr = linear_model.LinearRegression()
lr.fit(x, y)
# 查看最佳拟合系数
print('k:', lr.coef_)
# 截距
print('b:', lr.intercept_)

# 预测
xs = np.array([[10, 0, 180, 165, 175, 165, 170, 165],
                [17, 1, 173, 153, 175, 161, 170, 161],
                [34, 0, 170, 165, 170, 165, 170, 165]])
for item in xs:
    # 深复制，假设超过18岁以后就不再长高了
    item1 = copy.deepcopy(item)
    if item1[0] > 18:
        item1[0] = 18
    print(item, ':', lr.predict(item1.reshape(1,-1)))
